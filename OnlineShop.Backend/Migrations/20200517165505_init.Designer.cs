// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlineShop.Backend.Models;

namespace OnlineShop.Backend.Migrations
{
    [DbContext(typeof(ETDatabaseContext))]
    [Migration("20200517165505_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OnlineShop.Backend.Models.Cards", b =>
                {
                    b.Property<int>("CardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CardID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<int>("Cvv")
                        .HasColumnName("CVV")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("NameOnCard")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("CardId")
                        .HasName("PK_tCards_CardID");

                    b.ToTable("tCards");

                    b.HasComment("Contains info about cards.");
                });

            modelBuilder.Entity("OnlineShop.Backend.Models.Categories", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CategoryID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryDescription")
                        .HasColumnType("text");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.HasKey("CategoryId")
                        .HasName("PK_tCategories_CategoryID");

                    b.HasIndex("CategoryName")
                        .IsUnique()
                        .HasName("AK_tCategories_CategorytName");

                    b.ToTable("tCategories");

                    b.HasComment("Contains info about categories of products.");
                });

            modelBuilder.Entity("OnlineShop.Backend.Models.OrderDetails", b =>
                {
                    b.Property<int>("OrderDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("OrderDetailsID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("OrderCost")
                        .HasColumnType("float");

                    b.Property<int>("OrderId")
                        .HasColumnName("OrderID")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnName("ProductID")
                        .HasColumnType("int");

                    b.Property<int>("PromoId")
                        .HasColumnName("PromoID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderDetailsId")
                        .HasName("PK_tOrderDetails_OrderDetailsID");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.HasIndex("PromoId");

                    b.ToTable("tOrderDetails");

                    b.HasComment("Contains info about single order.");
                });

            modelBuilder.Entity("OnlineShop.Backend.Models.Orders", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("OrderID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comments")
                        .HasColumnType("text");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("OrderStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<DateTime>("ShippedDate")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("ShippingAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ShippingMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<int>("UserId")
                        .HasColumnName("UserID")
                        .HasColumnType("int");

                    b.HasKey("OrderId")
                        .HasName("PK_tOrders_OrderID");

                    b.HasIndex("UserId");

                    b.ToTable("tOrders");

                    b.HasComment("Contains info about all orders.");
                });

            modelBuilder.Entity("OnlineShop.Backend.Models.Products", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ProductID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnName("CategoryID")
                        .HasColumnType("int");

                    b.Property<byte[]>("ImageColumn")
                        .HasColumnType("varbinary(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("ProductDescription")
                        .HasColumnType("text");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("ProductId")
                        .HasName("PK_tProducts_ProductID");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ProductName")
                        .IsUnique()
                        .HasName("AK_tProducts_ProductName");

                    b.ToTable("tProducts");

                    b.HasComment("Contains info about products in shop.");
                });

            modelBuilder.Entity("OnlineShop.Backend.Models.Promotions", b =>
                {
                    b.Property<int>("PromoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PromoID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("DiscountValue")
                        .HasColumnType("float");

                    b.HasKey("PromoId")
                        .HasName("PK_tPromotions_PromoID");

                    b.ToTable("tPromotions");

                    b.HasComment("Contains information about current promotions.");
                });

            modelBuilder.Entity("OnlineShop.Backend.Models.Users", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UserID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasColumnType("varchar(120)")
                        .HasMaxLength(120)
                        .IsUnicode(false);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Company")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<string>("Pass")
                        .IsRequired()
                        .HasColumnType("nvarchar(12)")
                        .HasMaxLength(12);

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(11)")
                        .HasMaxLength(11);

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.HasKey("UserId")
                        .HasName("PK_tUsers_UserID");

                    b.ToTable("tUsers");

                    b.HasComment("Contains info about single user.");
                });

            modelBuilder.Entity("OnlineShop.Backend.Models.OrderDetails", b =>
                {
                    b.HasOne("OnlineShop.Backend.Models.Orders", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK_tOrderDetails_Orders")
                        .IsRequired();

                    b.HasOne("OnlineShop.Backend.Models.Products", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_tOrderDetails_Products")
                        .IsRequired();

                    b.HasOne("OnlineShop.Backend.Models.Promotions", "Promo")
                        .WithMany("OrderDetails")
                        .HasForeignKey("PromoId")
                        .HasConstraintName("FK_tOrderDetails_Promotions")
                        .IsRequired();
                });

            modelBuilder.Entity("OnlineShop.Backend.Models.Orders", b =>
                {
                    b.HasOne("OnlineShop.Backend.Models.Users", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_tOrders_Users")
                        .IsRequired();
                });

            modelBuilder.Entity("OnlineShop.Backend.Models.Products", b =>
                {
                    b.HasOne("OnlineShop.Backend.Models.Categories", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK_tProducts_tCategories")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
